package com.connode.service.terminal.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NodeServices", targetNamespace = "http://ws.terminal.service.connode.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NodeServices {


    /*
     * 
     * @param nodeIdentity
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "removeNodeIdentityFromWhiteList", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.RemoveNodeIdentityFromWhiteList")
    @ResponseWrapper(localName = "removeNodeIdentityFromWhiteListResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.RemoveNodeIdentityFromWhiteListResponse")
    public void removeNodeIdentityFromWhiteList(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity)
        throws WSNodeException
    ;

    /**
     * 
     * @param radiusMeters
     * @param nodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeTopologyView
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAreaTopologyView", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetAreaTopologyView")
    @ResponseWrapper(localName = "getAreaTopologyViewResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetAreaTopologyViewResponse")
    public WsNodeTopologyView getAreaTopologyView(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId,
        @WebParam(name = "radiusMeters", targetNamespace = "")
        int radiusMeters)
        throws WSNodeException
    ;

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeMetricSearchResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchNodeMetrics", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodeMetrics")
    @ResponseWrapper(localName = "searchNodeMetricsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodeMetricsResponse")
    public WsNodeMetricSearchResult searchNodeMetrics(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeMetricSearchCriteria searchCriteria);

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns long
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countNodes", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodes")
    @ResponseWrapper(localName = "countNodesResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodesResponse")
    public long countNodes(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeSearch searchCriteria)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeIdentity
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "addNodeIdentityToWhiteList", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.AddNodeIdentityToWhiteList")
    @ResponseWrapper(localName = "addNodeIdentityToWhiteListResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.AddNodeIdentityToWhiteListResponse")
    public void addNodeIdentityToWhiteList(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @param parameters
     * @return
     *     returns com.connode.service.terminal.ws.WsDataRateResult
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeServerToNodeDataRate", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.ExecuteServerToNodeDataRate")
    @ResponseWrapper(localName = "serverToNodeDataRateResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.WsServerToNodeDataRateResponse")
    public WsDataRateResult executeServerToNodeDataRate(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId,
        @WebParam(name = "parameters", targetNamespace = "")
        WsServerToNodeDataRateParameters parameters)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "resetMessageQueuePullIntervalForNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.ResetMessageQueuePullIntervalForNode")
    @ResponseWrapper(localName = "resetMessageQueuePullIntervalForNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.ResetMessageQueuePullIntervalForNodeResponse")
    public void resetMessageQueuePullIntervalForNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeIdentity
     * @return
     *     returns boolean
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isNodeIdentityWhiteListed", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.IsNodeIdentityWhiteListed")
    @ResponseWrapper(localName = "isNodeIdentityWhiteListedResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.IsNodeIdentityWhiteListedResponse")
    public boolean isNodeIdentityWhiteListed(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsPing
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "pingNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.PingNode")
    @ResponseWrapper(localName = "pingNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.WsPingNodeResponse")
    public WsPing pingNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeTopologyView
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeTopologyView", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeTopologyView")
    @ResponseWrapper(localName = "getNodeTopologyViewResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeTopologyViewResponse")
    public WsNodeTopologyView getNodeTopologyView(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsNode
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeById", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeById")
    @ResponseWrapper(localName = "getNodeByIdResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeByIdResponse")
    public WsNode getNodeById(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId);

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns long
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countNodeMetrics", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodeMetrics")
    @ResponseWrapper(localName = "countNodeMetricsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodeMetricsResponse")
    public long countNodeMetrics(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeMetricSearchCriteria searchCriteria)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @return
     *     returns java.lang.Integer
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessageQueuePullIntervalForNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetMessageQueuePullIntervalForNode")
    @ResponseWrapper(localName = "getMessageQueuePullIntervalForNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetMessageQueuePullIntervalForNodeResponse")
    public Integer getMessageQueuePullIntervalForNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "purgeNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.PurgeNode")
    @ResponseWrapper(localName = "purgeNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.PurgeNodeResponse")
    public void purgeNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsRestart
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restartNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.RestartNode")
    @ResponseWrapper(localName = "restartNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.WsRestartNodeResponse")
    public WsRestart restartNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId)
        throws WSNodeException
    ;

    /**
     * 
     * @param latitude
     * @param nodeId
     * @param longitude
     * @return
     *     returns com.connode.service.terminal.ws.WsNode
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setLocation", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetLocation")
    @ResponseWrapper(localName = "setLocationResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetLocationResponse")
    public WsNode setLocation(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId,
        @WebParam(name = "latitude", targetNamespace = "")
        String latitude,
        @WebParam(name = "longitude", targetNamespace = "")
        String longitude)
        throws WSNodeException
    ;

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeEventSearchResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchNodeEvents", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodeEvents")
    @ResponseWrapper(localName = "searchNodeEventsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodeEventsResponse")
    public WsNodeEventSearchResult searchNodeEvents(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeEventSearchCriteria searchCriteria);

    /**
     * 
     * @param pullIntervalSeconds
     * @param nodeId
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "setMessageQueuePullIntervalForNode", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetMessageQueuePullIntervalForNode")
    @ResponseWrapper(localName = "setMessageQueuePullIntervalForNodeResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetMessageQueuePullIntervalForNodeResponse")
    public void setMessageQueuePullIntervalForNode(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId,
        @WebParam(name = "pullIntervalSeconds", targetNamespace = "")
        int pullIntervalSeconds)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeIdentity
     */
    @WebMethod
    @RequestWrapper(localName = "removeNodeIdentityFromBlackList", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.RemoveNodeIdentityFromBlackList")
    @ResponseWrapper(localName = "removeNodeIdentityFromBlackListResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.RemoveNodeIdentityFromBlackListResponse")
    public void removeNodeIdentityFromBlackList(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity);

    /**
     * 
     * @param nodeIdentity
     * @return
     *     returns boolean
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isNodeIdentityBlackListed", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.IsNodeIdentityBlackListed")
    @ResponseWrapper(localName = "isNodeIdentityBlackListedResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.IsNodeIdentityBlackListedResponse")
    public boolean isNodeIdentityBlackListed(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity)
        throws WSNodeException
    ;

    /**
     * 
     * @param startId
     * @param itemCount
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeMetricSearchResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeMetrics", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeMetrics")
    @ResponseWrapper(localName = "getNodeMetricsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeMetricsResponse")
    public WsNodeMetricSearchResult getNodeMetrics(
        @WebParam(name = "startId", targetNamespace = "")
        long startId,
        @WebParam(name = "itemCount", targetNamespace = "")
        int itemCount);

    /**
     * 
     * @param nodeIdentity
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "addNodeIdentityToBlackList", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.AddNodeIdentityToBlackList")
    @ResponseWrapper(localName = "addNodeIdentityToBlackListResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.AddNodeIdentityToBlackListResponse")
    public void addNodeIdentityToBlackList(
        @WebParam(name = "nodeIdentity", targetNamespace = "")
        String nodeIdentity)
        throws WSNodeException
    ;

    /**
     * 
     * @param startId
     * @param itemCount
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeEventSearchResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeEvents", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeEvents")
    @ResponseWrapper(localName = "getNodeEventsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeEventsResponse")
    public WsNodeEventSearchResult getNodeEvents(
        @WebParam(name = "startId", targetNamespace = "")
        long startId,
        @WebParam(name = "itemCount", targetNamespace = "")
        int itemCount);

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeSearchResult
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchNodes", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodes")
    @ResponseWrapper(localName = "searchNodesResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SearchNodesResponse")
    public WsNodeSearchResult searchNodes(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeSearch searchCriteria)
        throws WSNodeException
    ;

    /**
     * 
     * @param nodeId
     * @param parameters
     * @return
     *     returns com.connode.service.terminal.ws.WsDataRateResult
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeNodeToServerDataRate", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.ExecuteNodeToServerDataRate")
    @ResponseWrapper(localName = "nodeToServerDataRateResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.WsNodeToServerDataRateResponse")
    public WsDataRateResult executeNodeToServerDataRate(
        @WebParam(name = "nodeId", targetNamespace = "")
        String nodeId,
        @WebParam(name = "parameters", targetNamespace = "")
        WsNodeToServerDataRateParameters parameters)
        throws WSNodeException
    ;

    /**
     * 
     * @param searchCriteria
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countNodeEvents", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodeEvents")
    @ResponseWrapper(localName = "countNodeEventsResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.CountNodeEventsResponse")
    public long countNodeEvents(
        @WebParam(name = "searchCriteria", targetNamespace = "")
        WsNodeEventSearchCriteria searchCriteria);

    /**
     * 
     * @param nodeAccessConfiguration
     * @throws WSNodeException
     */
    @WebMethod
    @RequestWrapper(localName = "setNodeAccessConfiguration", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetNodeAccessConfiguration")
    @ResponseWrapper(localName = "setNodeAccessConfigurationResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.SetNodeAccessConfigurationResponse")
    public void setNodeAccessConfiguration(
        @WebParam(name = "nodeAccessConfiguration", targetNamespace = "")
        WsNodeAccessConfiguration nodeAccessConfiguration)
        throws WSNodeException
    ;

    /**
     * 
     * @return
     *     returns com.connode.service.terminal.ws.WsNodeAccessConfiguration
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNodeAccessConfiguration", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeAccessConfiguration")
    @ResponseWrapper(localName = "getNodeAccessConfigurationResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetNodeAccessConfigurationResponse")
    public WsNodeAccessConfiguration getNodeAccessConfiguration()
        throws WSNodeException
    ;

    /**
     * 
     * @param gatewayNodeId
     * @return
     *     returns com.connode.service.terminal.ws.WsUplinkIpTunnelInfo
     * @throws WSNodeException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUplinkIpTunnelInfo", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.GetUplinkIpTunnelInfo")
    @ResponseWrapper(localName = "uplinkIpTunneInfoResponse", targetNamespace = "http://ws.terminal.service.connode.com/", className = "com.connode.service.terminal.ws.WsUplinkIpTunnelInfoResponse")
    public WsUplinkIpTunnelInfo getUplinkIpTunnelInfo(
        @WebParam(name = "gatewayNodeId", targetNamespace = "")
        String gatewayNodeId)
        throws WSNodeException
    ;

}
